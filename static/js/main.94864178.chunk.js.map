{"version":3,"sources":["Aviasales.jsx","App.jsx","serviceWorker.js","index.jsx","App.module.css"],"names":["AviaSales","props","useState","x","setX","step","setStep","ticketsList","checkbox","key","checked","id","value","steps","console","log","number","arr","mainTickets","length","i","obj","price","company","carrier","forward","segments","origin","destination","toward","timeForward","duration","timeToward","stepsForward","stops","stepsToward","stepsForwardCities","join","stepsTowardCities","push","filter","e","renderingData","mappedTickets","undefined","className","classes","body","ul","map","el","onChange","n","check","wrapper","ticketsArea","src","alt","App","searchId","setSearchId","stop","setStop","setMainTickets","mainData","first","useEffect","a","axios","result","data","fetchData","concat","tickets","message","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.94864178.chunk.js","sourcesContent":["/* eslint-disable object-curly-newline */\n/* eslint-disable arrow-parens */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-expressions */\n\nimport React, { useState } from 'react';\nimport { Checkbox } from 'antd';\nimport classes from './App.module.css';\n\nconst AviaSales = props => {\n  const [x, setX] = useState(false);\n  const [step, setStep] = useState({\n    step: 1,\n  });\n\n  let { ticketsList } = props;\n  const checkbox = [\n    { key: 1, checked: x, id: 1, value: 'Без остановок', steps: 0 },\n    { key: 2, checked: x, id: 2, value: '1 остановка', steps: 1 },\n    { key: 3, checked: x, id: 3, value: '2 остановки', steps: 2 },\n    { key: 4, checked: x, id: 4, value: '3 остановки', steps: 3 },\n    { key: 5, checked: x, id: 5, value: 'Все', steps: 5 },\n  ];\n\n  const changing = (n, check) => {\n    ticketsList = props.mainTickets;\n    checkbox[n - 1].checked = setX(!x);\n    console.log(checkbox[n - 1].checked);\n    if (check) {\n      setStep({\n        ...step,\n        step: checkbox[n - 1].steps,\n      });\n    }\n  };\n  console.log(checkbox[0].checked);\n\n  const number = step.step;\n\n  const arr = [];\n  if (props.mainTickets.length !== 0) {\n    ticketsList = props.mainTickets;\n  }\n\n  for (let i = 0; i < ticketsList.length; i++) {\n    const obj = {\n      id: i,\n      price: ticketsList[i].price,\n      company: `//pics.avs.io/99/36/{${ticketsList[i].carrier}}.png`,\n      forward: `${ticketsList[i].segments[0].origin}-${ticketsList[i].segments[0].destination}`,\n      toward: `${ticketsList[i].segments[1].origin}-${ticketsList[i].segments[0].destination}`,\n      timeForward: ticketsList[i].segments[0].duration,\n      timeToward: ticketsList[i].segments[1].duration,\n      stepsForward: ticketsList[i].segments[0].stops.length,\n      stepsToward: ticketsList[i].segments[1].stops.length,\n      stepsForwardCities: ticketsList[i].segments[0].stops.join('-'),\n      stepsTowardCities: ticketsList[i].segments[1].stops.join('-'),\n    };\n    arr.push(obj);\n  }\n\n  const filter = arr.filter(e => e.stepsForward + e.stepsToward === number);\n  const renderingData = [];\n  for (let i = 0; i < 5; i++) {\n    renderingData.push(filter[i]);\n  }\n  const mappedTickets = renderingData.filter(e => e !== undefined);\n\n  if (arr.length !== 0) {\n    return (\n      <div className={classes.body}>\n        <ul className={classes.ul}>\n          {checkbox.map(el => (\n            <li key={el.key}>\n              <Checkbox onChange={() => changing(el.id, el.checked)} checked={!el.checked}>\n                {el.value}\n              </Checkbox>\n            </li>\n          ))}\n        </ul>\n        <div className={classes.wrapper}>\n          {mappedTickets.map(el => (\n            <div key={el.id} className={classes.ticketsArea}>\n              <ul>\n                <li>{el.price}</li>\n                <li>{el.toward}</li>\n              </ul>\n              <ul>\n                <li>{el.timeForward}</li>\n                <li>{el.timeToward}</li>\n              </ul>\n              <ul>\n                <li>{el.stepsForward}</li>\n                <li>{el.stepsToward}</li>\n              </ul>\n              <ul>\n                <li>{el.stepsForwardCities}</li>\n                <li>{el.stepsTowardCities}</li>\n                <li>\n                  <img src={el.company} alt=\"\" />\n                </li>\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return 'please wait';\n};\nexport default AviaSales;\n","/* eslint-disable comma-dangle */\n/* eslint-disable arrow-body-style */\n/* eslint-disable react/no-array-index-key */\n\nimport React, { useState, useEffect } from 'react';\nimport './App.module.css';\nimport axios from 'axios';\nimport AviaSales from './Aviasales';\n\nconst App = () => {\n  const [searchId, setSearchId] = useState('');\n  const [stop, setStop] = useState(false);\n  const [mainTickets, setMainTickets] = useState([]);\n\n  let mainData = [];\n  if (stop === true && mainData.length === 0) {\n    mainData = mainTickets;\n  }\n  const first = [];\n  if (mainTickets.length !== 0) {\n    for (let i = 0; i < 50; i++) {\n      first.push(mainTickets[i]);\n    }\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('https://front-test.beta.aviasales.ru/search');\n      setSearchId(result.data.searchId);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchId !== '') {\n        try {\n          const result = await axios(\n            `https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`\n          );\n          setStop(result.data.stop);\n          setMainTickets(mainTickets.concat(result.data.tickets));\n        } catch (error) {\n          if (error.message === 'Request failed with status code 500') {\n            fetchData();\n          }\n        }\n      }\n    };\n    if (stop === false) {\n      fetchData();\n    }\n  }, [searchId, stop, mainTickets]);\n\n  return <AviaSales ticketsList={first} mainTickets={mainData} />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\",\"ul\":\"App_ul__241OB\",\"ticketsArea\":\"App_ticketsArea__2vWHl\",\"wrapper\":\"App_wrapper__2Rh_f\"};"],"sourceRoot":""}