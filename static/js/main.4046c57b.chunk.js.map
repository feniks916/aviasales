{"version":3,"sources":["Aviasales.jsx","App.jsx","serviceWorker.js","index.jsx","App.module.css"],"names":["AviaSales","props","useState","step","setStep","checked","setChecked","ticketsList","data","setData","handler","newChecked","console","log","number","renderingData","arr","mainTickets","length","i","obj","id","price","company","carrier","forward","segments","origin","destination","toward","timeForward","duration","timeToward","stepsForward","stops","stepsToward","stepsForwardCities","join","stepsTowardCities","filter","Number","push","e","firstPart","item","slice","concat","secondPart","mappedTickets","undefined","className","classes","body","ul","key","value","steps","map","el","onClick","num","currentIndex","indexOf","splice","sorted","sort","a","b","changing","wrapper","cheapData","quickData","ticketsArea","src","alt","App","searchId","setSearchId","stop","setStop","setMainTickets","mainData","first","useEffect","axios","result","fetchData","tickets","message","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4046c57b.chunk.js","sourcesContent":["/* eslint-disable id-length */\n/* eslint-disable react/button-has-type */\n/* eslint-disable object-curly-newline */\n/* eslint-disable arrow-parens */\n\nimport React, { useState } from 'react';\nimport { Checkbox } from 'antd';\nimport classes from './App.module.css';\n\nconst AviaSales = props => {\n  const [step, setStep] = useState({\n    step: 1,\n  });\n\n  const [checked, setChecked] = useState([]);\n\n  let { ticketsList } = props;\n  const checkbox = [\n    { key: 1, id: 1, value: 'Без остановок', steps: 0 },\n    { key: 2, id: 2, value: '1 остановка', steps: 1 },\n    { key: 3, id: 3, value: '2 остановки', steps: 2 },\n    { key: 4, id: 4, value: '3 остановки', steps: 3 },\n    { key: 5, id: 5, value: 'Все', steps: 5 },\n  ];\n  const [data, setData] = useState([]);\n  const handler = checked;\n  let newChecked = [];\n  const changing = num => {\n    ticketsList = props.mainTickets;\n    setData([]);\n    const currentIndex = checked.indexOf(num);\n    newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(num);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n    const sorted = newChecked.sort((a, b) => b - a);\n    if (sorted.length === 0) {\n      sorted[0] = 1;\n    }\n    setStep({\n      ...step,\n      step: sorted[0] - 1,\n    });\n  };\n  console.log(handler);\n\n  const number = step.step;\n  let renderingData = [];\n  const cheap = () => {\n    setStep({\n      ...step,\n      step: number,\n    });\n    let cheapData = [...data];\n    cheapData = renderingData.sort((a, b) => a.price - b.price);\n    setData(cheapData);\n  };\n  const quick = () => {\n    setStep({\n      ...step,\n      step: number,\n    });\n    let quickData = [...data];\n    quickData = renderingData.sort(\n      (a, b) => a.timeForward + a.timeToward - (b.timeForward + b.timeToward)\n    );\n    setData(quickData);\n  };\n\n  const arr = [];\n  if (props.mainTickets.length !== 0) {\n    ticketsList = props.mainTickets;\n  }\n\n  for (let i = 0; i < ticketsList.length; i++) {\n    const obj = {\n      id: i,\n      price: ticketsList[i].price,\n      company: `//pics.avs.io/99/36/{${ticketsList[i].carrier}}.png`,\n      forward: `${ticketsList[i].segments[0].origin}-${ticketsList[i].segments[0].destination}`,\n      toward: `${ticketsList[i].segments[1].origin}-${ticketsList[i].segments[0].destination}`,\n      timeForward: ticketsList[i].segments[0].duration,\n      timeToward: ticketsList[i].segments[1].duration,\n      stepsForward: ticketsList[i].segments[0].stops.length,\n      stepsToward: ticketsList[i].segments[1].stops.length,\n      stepsForwardCities: ticketsList[i].segments[0].stops.join('-'),\n      stepsTowardCities: ticketsList[i].segments[1].stops.join('-'),\n      filter: Number(\n        ticketsList[i].segments[0].stops.length + ticketsList[i].segments[1].stops.length\n      ),\n    };\n    arr.push(obj);\n  }\n\n  let filter = arr.filter(e => e.stepsForward + e.stepsToward === number);\n\n  if (handler.length > 1) {\n    const firstPart = arr.filter(item => item.filter === handler[0] - 1).slice(0, 3);\n    const secondPart = arr\n      .filter(item => item.filter === handler[handler.length - 1] - 1)\n      .slice(0, 2)\n      .concat(firstPart);\n    filter = secondPart;\n  }\n\n  if (handler.length > 2) {\n    const firstPart = arr.filter(item => item.filter === handler[0] - 1).slice(0, 2);\n    const secondPart = arr\n      .filter(item => item.filter === handler[handler.length - 1] - 1)\n      .slice(0, 1)\n      .concat(firstPart);\n    const thirdPart = arr\n      .filter(item => item.filter === handler[handler.length - 2] - 1)\n      .slice(0, 2)\n      .concat(secondPart);\n    filter = thirdPart;\n  }\n\n  if (number > 3) {\n    filter = arr.filter(e => e.stepsForward + e.stepsToward <= number);\n  }\n\n  for (let i = 0; i < 5; i++) {\n    renderingData.push(filter[i]);\n  }\n\n  if (data.length > 0) {\n    renderingData = data;\n  }\n  const mappedTickets = renderingData.filter(e => e !== undefined);\n\n  if (arr.length !== 0) {\n    return (\n      <div className={classes.body}>\n        <ul className={classes.ul}>\n          {checkbox.map(el => (\n            <li key={el.key}>\n              <Checkbox onClick={() => changing(el.id)} checked={checked.indexOf(el.id) !== -1}>\n                {el.value}\n              </Checkbox>\n            </li>\n          ))}\n        </ul>\n        <div className={classes.wrapper}>\n          <div>\n            <button onClick={cheap}>\n              <p>Самый дешевый</p>\n            </button>\n            <button onClick={quick}>\n              <p>Самый быстрый</p>\n            </button>\n          </div>\n          {mappedTickets.map(el => (\n            <div key={el.id} className={classes.ticketsArea}>\n              <ul>\n                <li>{el.price}</li>\n                <li>{el.toward}</li>\n              </ul>\n              <ul>\n                <li>{el.timeForward}</li>\n                <li>{el.timeToward}</li>\n              </ul>\n              <ul>\n                <li>{el.stepsForward}</li>\n                <li>{el.stepsToward}</li>\n              </ul>\n              <ul>\n                <li>{el.stepsForwardCities}</li>\n                <li>{el.stepsTowardCities}</li>\n                <li>\n                  <img src={el.company} alt=\"\" />\n                </li>\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return 'please wait';\n};\nexport default AviaSales;\n","/* eslint-disable comma-dangle */\n/* eslint-disable arrow-body-style */\n/* eslint-disable react/no-array-index-key */\n\nimport React, { useState, useEffect } from 'react';\nimport './App.module.css';\nimport axios from 'axios';\nimport AviaSales from './Aviasales';\n\nconst App = () => {\n  const [searchId, setSearchId] = useState('');\n  const [stop, setStop] = useState(false);\n  const [mainTickets, setMainTickets] = useState([]);\n\n  let mainData = [];\n  if (stop === true && mainData.length === 0) {\n    mainData = mainTickets;\n  }\n  const first = [];\n  if (mainTickets.length !== 0) {\n    for (let i = 0; i < 50; i++) {\n      first.push(mainTickets[i]);\n    }\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('https://front-test.beta.aviasales.ru/search');\n      setSearchId(result.data.searchId);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchId !== '') {\n        try {\n          const result = await axios(\n            `https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`\n          );\n          setStop(result.data.stop);\n          setMainTickets(mainTickets.concat(result.data.tickets));\n        } catch (error) {\n          if (error.message === 'Request failed with status code 500') {\n            fetchData();\n          }\n        }\n      }\n    };\n    if (stop === false) {\n      fetchData();\n    }\n  }, [searchId, stop, mainTickets]);\n\n  return <AviaSales ticketsList={first} mainTickets={mainData} />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\",\"ul\":\"App_ul__241OB\",\"ticketsArea\":\"App_ticketsArea__2vWHl\",\"wrapper\":\"App_wrapper__2Rh_f\"};"],"sourceRoot":""}